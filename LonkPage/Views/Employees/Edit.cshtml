@model ATS.Models.Models.ViewModel.Employee.EmployeeEditVm

@{
    ViewBag.Title = "Edit";
}

<div class="container-fluid">
    <div class="row">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title">Employee</h3>
            </div>
            <div class="panel-body">
                <!--Form Start-->
                @using (Html.BeginForm("Edit", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    <div class="col-md-12 col-sm-12 ">
                        <fieldset>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <!-- Form Name -->
                            <!-- Text input-->
                            <div class="row">
                                <!-- row start-->
                                <div class="col-md-10 col-md-offset-1 form-group">
                                    @Html.LabelFor(model => model.Branch.OrganizationId, "Organization", htmlAttributes: new { @class = "control-label col-md-2 col-sm-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.DropDownListFor(model => model.OrganizationId, new SelectList(Model.OrganizationLookUp, "Value", "Text"), new { id = "OrganizationAssetEntry", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Branch.OrganizationId, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.BranchId, "Branch", new { @class = "control-label col-md-2 col-sm-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.DropDownListFor(model => model.BranchId, new SelectList(Model.BranchLookUp, "Value", "Text"), new { id = "BranchAssetEntry", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.BranchId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><!-- row end-->

                            <div class="row">
                                <!-- row start-->
                                <div class="col-md-10 col-md-offset-1 form-group">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.TextBoxFor(model => model.FirstName, new { id = "firstNameEmployee", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.TextBoxFor(model => model.LastName, new { id = "lastNameEmployee", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><!-- row end-->
                            <div class="row">
                                <!-- row start-->
                                <div class="col-md-10 col-md-offset-1 form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.TextBoxFor(model => model.ContactNo, new { id = "contactNoEmployee", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { id = "contactNoEmployeeExistenceCheck", @class = "text-danger" })
                                    </div>
                                </div>
                            </div><!-- row end-->
                            <div class="row">
                                <!-- row start-->
                                <div class="col-md-10 col-md-offset-1 form-group">
                                    @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.TextBoxFor(model => model.Department, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><!-- row end-->

                            <div class="row">
                                <!-- row start-->
                                <div class="col-md-10 col-md-offset-1 form-group">
                                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                    </div>

                                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">

                                        @Html.TextBoxFor(model => model.Code, new { id = "codeEmployee", @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><!-- row end-->
                            <div class="row">
                                <!-- row start-->
                                <div class="col-md-10 col-md-offset-1 form-group">
                                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-4 col-sm-4">
                                        <input type="file" name="Image" accept=".jpg,.jpeg,.png" onchange="readURL(this)"/><br/>
                                        @*<input type="file" name="Image" accept="image/*" />*@
                                        <img id="showImage" src="@Url.Content(@Model.Image)" height="100" width="100" class="img-thumbnail" alt="Image not available" />
                                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div><!-- row end-->
                            <hr />
                            <div class="row">
                                <!-- row start-->
                                <div class="form-group">
                                    <div class="col-md-11 col-sm-11" align="right">
                                        <input type="submit" id="Save" name="Save" class="btn btn-success" value="Update" />
                                        @Html.ActionLink("Cancel", "Edit", "Employees", new { @class = "btn btn-danger" })
                                    </div>
                                </div>
                            </div><!-- row end-->
                            <div>
                                @Html.ActionLink("Back to Employee List", "Index")
                            </div>

                        </fieldset>
                    </div>
                }
                <!--Form End-->



            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        //To show image
        //$('#showImage').hide();
       
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function(e) {
                    $('#showImage')
                        .attr('src', e.target.result)
                        .width(100).height(100).show();
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

    </script>

<script src="~/Scripts/ATS/aaa.js"></script>
    <script src="~/Scripts/ATS/DD.js"></script>
    <script src="~/Scripts/ATS/ShortCodeGeneration.js"></script>
    <script src="~/Scripts/ATS/ExistenceChecking.js"></script>
}